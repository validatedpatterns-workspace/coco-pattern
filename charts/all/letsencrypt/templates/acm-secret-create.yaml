{{ if .Values.letsencrypt.enabled }}
{{ if and (eq .Values.global.clusterPlatform "Azure") .Values.letsencrypt.cloudProviderDNS }}
---
## USE ACM policies to enforce the creation of a lets-encrypt cert
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: azure-secret-policy
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: azure-client-creds
      spec:
        remediationAction: enforce
        severity: medium
        object-templates:
        - complianceType: mustonlyhave
          objectDefinition:
            apiVersion: v1
            type: Opaque
            kind: Secret
            metadata:
              name: azuredns-config
              namespace: cert-manager
            data:
              client-secret: '{{ `{{ fromSecret "openshift-cloud-controller-manager" "azure-cloud-credentials" "azure_client_secret" }}` }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: azure-secret-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: azure-managed-clusters-placement-rule
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: azure-secret-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
------
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: azure-managed-clusters-placement-rule
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchLabels:
      cloud: Azure

---
{{- end }}
{{- end }}