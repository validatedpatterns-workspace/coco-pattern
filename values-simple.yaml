# This is currently configured as an 'all in one' deployment in one cluster.

clusterGroup:
  name: simple
  isHubCluster: true
  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - openshift-sandboxed-containers-operator
  - trustee-operator-system
  - hello-openshift
  - cert-manager-operator
  - cert-manager
  - letsencrypt

  subscriptions:
    # ACM is kept anticipating 
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.12

    sandbox:
      name: sandboxed-containers-operator
      namespace: openshift-sandboxed-containers-operator
      channel: stable
      version: "1.8.1" # ask for latest

    trustee:
      name: trustee-operator
      namespace: trustee-operator-system
      source: redhat-operators
      channel: stable
      version: "0.2.0"

    cert-manager:
      name: openshift-cert-manager-operator
      namespace: cert-manager-operator
      channel: stable-v1

  projects:
  - hub
  - vault
  - trustee
  - golang-external-secrets
  - sandbox
  - hello-openshift
  # Explicitly mention the cluster-state based overrides we plan to use for this pattern.
  # We can use self-referential variables because the chart calls the tpl function with these variables defined
  sharedValueFiles:
  - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      chart: acm
      chartVersion: 0.1.*

    vault:
      name: vault
      namespace: vault
      project: vault
      chart: hashicorp-vault
      chartVersion: 0.1.*

    secrets-operator:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: golang-external-secrets
      chart: golang-external-secrets
      chartVersion: 0.1.*

    trustee:
      name: trustee
      namespace: trustee-operator-system #upstream config
      project: trustee
      path: charts/hub/trustee

    sandbox:
      name: sandbox
      namespace: openshift-sandboxed-containers-operator #upstream config
      project: sandbox
      path: charts/all/sandbox

    letsencrypt:
      name: letsencrypt
      namespace: letsencrypt
      project: hub
      path: charts/all/letsencrypt

    hello-openshift:
      name: hello-openshift
      namespace: hello-openshift
      project: hello-openshift
      path: charts/coco-supported/hello-openshift

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: install-deps
      playbook: ansible/install-deps.yaml
      verbosity: -vvv
      timeout: 3600
    - name: configure-azure-dns
      playbook: ansible/configure-issuer.yaml
      # this image has not been changes. TBD would make sense 
      #image: quay.io/hybridcloudpatterns/ansible-edge-gitops-ee:latest
      verbosity: -vvv
      timeout: 3600
    # - name: hello-world
    #   # ansible playbook to be run
    #   playbook: common/ansible/playbooks/hello-world/hello-world.yaml
    #   # per playbook timeout in seconds
    #   timeout: 234
    #   # verbosity: "-v"
  managedClusterGroups:
    exampleRegion:
      name: group-one
      acmlabels:
      - name: clusterGroup
        value: group-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
        # Before enabling cluster provisioning, ensure AWS and/or Azure
        #   credentials and OCP pull secrets are defined in Vault.
        #   See values-secret.yaml.template
        #
        #clusterPools:
        #  exampleAWSPool:
        #    name: aws-ap
        #    openshiftVersion: 4.10.18
        #    baseDomain: blueprints.rhecoeng.com
        #    platform:
        #      aws:
        #        region: ap-southeast-2
        #    clusters:
        #    - One
        #
        #  exampleAzurePool:
        #    name: azure-us
        #    openshiftVersion: 4.10.18
        #    baseDomain: blueprints.rhecoeng.com
        #    platform:
        #      azure:
        #        baseDomainResourceGroupName: dojo-dns-zones
        #        region: eastus
        #    clusters:
        #    - Two
        #    - Three
        #  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
        #
        #    pipelines:
        #      name: pipelines
        #      namespace: production
        #      project: datacenter
        #      path: applications/pipeline
        #      repoURL: https://github.com/you/applications.git
        #      targetRevision: stable
        #      overrides:
        #      - name: myparam
        #        value: myparam
        #
        #    pipelines_staging:
        #    - name: pipelines
        #      namespace: staging
        #      project: datacenter
        #      path: applications/pipeline
        #      repoURL: https://github.com/you/applications.git
        #      targetRevision: main
        #
        #   Additional applications
        #   Be sure to include additional resources your apps will require
        #   +X machines
        #   +Y RAM
        #   +Z CPU
        #    vendor-app:
        #      name: vendor-app
        #      namespace: default
        #      project: vendor
        #      path: path/to/myapp
        #      repoURL: https://github.com/vendor/applications.git
        #      targetRevision: main

        #  managedSites:
        #    factory:
        #      name: factory
        #      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
        #      targetRevision: main
        #      path: applications/factory
        #      helmOverrides:
        #      - name: site.isHubCluster
        #        value: false
        #      clusterSelector:
        #        matchExpressions:
        #        - key: vendor
        #          operator: In
        #          values:
        #            - OpenShift


